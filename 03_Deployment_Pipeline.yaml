name: Deployment Pipeline
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Docker Image Version (Optional: Auto-Increment if Blank)'
        required: false
        default: ''
  push:
    branches:
      - master  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Version (Manual or Auto-Increment)
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            next_version="${{ github.event.inputs.version }}"
          else
            latest_version=$(curl -s "https://hub.docker.com/v2/repositories/selvinraj/nginx/tags" | jq -r '.results[].name' | grep -E '^v[0-9]+' | sort -V | tail -n1)
            if [[ -z "$latest_version" ]]; then
              next_version="v1"
            else
              next_version="v$(( ${latest_version:1} + 1 ))"
            fi
          fi
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t selvinraj/nginx:${{ env.NEXT_VERSION }} .

      - name: Authenticate to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Image
        run: |
          docker tag selvinraj/nginx:${{ env.NEXT_VERSION }} selvinraj/nginx:${{ env.NEXT_VERSION }}
          docker push selvinraj/nginx:${{ env.NEXT_VERSION }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        run: aws eks update-kubeconfig --name my-cluster --region us-east-1

      - name: Update StatefulSet with Version
        run: sed -i "s|{{VERSION}}|${{ env.NEXT_VERSION }}|g" StatefulSet.yaml

      - name: Deploy to Kubernetes
        run: kubectl apply -f StatefulSet.yaml

      - name: Wait for Pods to be Ready
        run: kubectl rollout status statefulset/nginx-statefulset
